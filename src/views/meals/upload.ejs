<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Meal - NutriScan.AI</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #a3e635;
            --primary-dark: #84cc16;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #0f172a;
            color: white;
        }

        .dashboard-gradient {
            background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
        }

        .card-shadow {
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3);
        }

        .active-nav-item {
            background-color: rgba(163, 230, 53, 0.1);
            border-left: 4px solid #a3e635;
            color: #a3e635;
        }

        .upload-area {
            border: 2px dashed #475569;
            transition: all 0.3s ease;
        }

        .upload-area.dragover {
            border-color: #a3e635;
            background-color: rgba(163, 230, 53, 0.05);
        }

        .preview-container {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.5s ease;
        }

        .preview-container.show {
            max-height: 500px;
        }

        #camera-feed {
            transform: scaleX(-1); /* Mirror the camera feed for more natural feel */
        }
    </style>
</head>

<body class="overflow-x-hidden">
    <!-- Dashboard Layout -->
    <div class="flex min-h-screen">
        <!-- Sidebar Navigation -->
        <aside class="w-64 bg-slate-900 p-6 hidden md:block">
            <!-- Logo -->
            <div class="flex items-center space-x-3 mb-10">
                <div
                    class="w-10 h-10 rounded-full bg-gradient-to-br from-lime-400 via-green-500 to-emerald-600 flex items-center justify-center relative">
                    <div class="w-6 h-6 rounded-full bg-white flex items-center justify-center">
                        <div class="w-3 h-3 rounded-full bg-gradient-to-br from-orange-400 to-red-500"></div>
                    </div>
                </div>
                <span class="text-2xl font-bold text-white">NutriScan.AI</span>
            </div>

            <!-- User Profile -->
            <div class="flex items-center space-x-3 mb-8 p-3 rounded-lg bg-slate-800">
                <div
                    class="w-12 h-12 bg-gradient-to-br from-lime-400 to-lime-600 rounded-full flex items-center justify-center">
                    <span class="text-white font-bold">AJ</span>
                </div>
                <div>
                    <p class="font-medium">Abdelilah</p>
                    <p class="text-sm text-slate-400">Weight Management</p>
                </div>
            </div>

            <!-- Navigation -->
            <nav class="space-y-2">
                <a href="/dashboard"
                    class="flex items-center space-x-3 p-3 rounded-lg text-slate-300 hover:text-white hover:bg-slate-800">
                    <i class="fas fa-home w-5 text-center"></i>
                    <span>Dashboard</span>
                </a>
                <a href="/meal-plans"
                    class="flex items-center space-x-3 p-3 rounded-lg text-slate-300 hover:text-white hover:bg-slate-800">
                    <i class="fas fa-utensils w-5 text-center"></i>
                    <span>Meal Plans</span>
                </a>
                <a href="/ai-analysis" class="flex items-center space-x-3 p-3 rounded-lg active-nav-item">
                    <i class="fas fa-camera w-5 text-center"></i>
                    <span>Scan Meal</span>
                </a>
                <a href="/progress"
                    class="flex items-center space-x-3 p-3 rounded-lg text-slate-300 hover:text-white hover:bg-slate-800">
                    <i class="fas fa-chart-line w-5 text-center"></i>
                    <span>Progress</span>
                </a>
            </nav>
        </aside>

        <!-- Main Content -->
        <div class="flex-1 flex flex-col">
            <!-- Top Header -->
            <header class="bg-slate-800 p-4 flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <button id="mobile-menu-button" class="md:hidden text-white">
                        <i class="fas fa-bars text-xl"></i>
                    </button>
                    <h1 class="text-xl font-bold">Upload Meal</h1>
                </div>

                <div class="flex items-center space-x-4">
                    <div class="relative">
                        <button class="flex items-center space-x-2 text-slate-300 hover:text-white">
                            <div
                                class="w-8 h-8 bg-gradient-to-br from-lime-400 to-lime-600 rounded-full flex items-center justify-center">
                                <span class="text-white text-sm font-bold">AJ</span>
                            </div>
                            <span>Abdelilah</span>
                        </button>
                    </div>
                </div>
            </header>

            <!-- Main Content -->
            <main class="flex-1 p-6 overflow-y-auto">
                <!-- Welcome Section -->
                <div class="dashboard-gradient rounded-2xl p-6 mb-6 card-shadow">
                    <div class="text-center">
                        <h2 class="text-2xl font-bold mb-2">Upload Meal Photo</h2>
                        <p class="text-slate-300">Simply upload a photo of your meal for AI analysis</p>
                    </div>
                </div>

                <!-- Upload Options -->
                <div class="max-w-md mx-auto">
                    <div class="bg-slate-800 rounded-xl p-8 card-shadow">
                        <!-- Upload Method Tabs -->
                        <div class="flex mb-6 bg-slate-700 rounded-lg p-1">
                            <button id="upload-tab" class="flex-1 py-2 rounded-md font-medium transition-colors bg-lime-500 text-slate-900">
                                Upload Image
                            </button>
                            <button id="camera-tab" class="flex-1 py-2 rounded-md font-medium transition-colors text-slate-300 hover:text-white">
                                Take Photo
                            </button>
                        </div>

                        <!-- Upload Section -->
                        <div id="upload-section" class="space-y-6">
                            <form action="/analyze" method="POST" enctype="multipart/form-data" class="space-y-6" id="upload-form">
                                <!-- Upload Area -->
                                <div class="upload-area rounded-xl p-8 text-center cursor-pointer" id="drop-area">
                                    <i class="fas fa-cloud-upload-alt text-4xl text-slate-500 mb-4"></i>
                                    <p class="text-slate-300 mb-2">Drag & drop your meal photo here</p>
                                    <p class="text-slate-500 text-sm mb-4">or</p>
                                    <label for="file-input" class="bg-lime-500 text-slate-900 py-2 px-6 rounded-lg font-medium cursor-pointer hover:bg-lime-400 transition-colors inline-block">
                                        Browse Files
                                    </label>
                                    <input type="file" id="file-input" name="mealImage" accept="image/*" class="hidden" required>
                                    <p class="text-slate-500 text-xs mt-4">Supports JPG, PNG, WebP (max 10MB)</p>
                                </div>

                                <!-- Image Preview -->
                                <div id="preview-container" class="preview-container">
                                    <div class="bg-slate-700 rounded-xl p-4">
                                        <div class="flex justify-between items-center mb-3">
                                            <h3 class="font-medium">Preview</h3>
                                            <button type="button" id="remove-image" class="text-red-400 hover:text-red-300">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                        <div class="relative">
                                            <img id="preview-image" src="" alt="Preview" class="w-full h-auto rounded-lg max-h-64 object-contain">
                                            <div class="absolute inset-0 flex items-center justify-center hidden" id="preview-loading">
                                                <div class="w-12 h-12 border-4 border-lime-500 border-t-transparent rounded-full animate-spin"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Submit Button -->
                                <button type="submit" id="analyze-button" disabled
                                    class="w-full bg-slate-600 text-slate-400 py-3 rounded-lg font-bold transition-colors flex items-center justify-center space-x-2 cursor-not-allowed">
                                    <i class="fas fa-robot"></i>
                                    <span>Analyze with AI</span>
                                </button>
                            </form>
                        </div>

                        <!-- Camera Section -->
                        <div id="camera-section" class="space-y-6 hidden">
                            <div class="bg-slate-700 rounded-xl p-4">
                                <div id="camera-container" class="relative">
                                    <video id="camera-feed" autoplay playsinline class="w-full h-auto rounded-lg"></video>
                                    <div class="absolute inset-0 flex items-center justify-center hidden" id="camera-loading">
                                        <div class="w-12 h-12 border-4 border-lime-500 border-t-transparent rounded-full animate-spin"></div>
                                    </div>
                                    <div class="absolute bottom-4 left-0 right-0 flex justify-center">
                                        <button id="capture-button" class="w-16 h-16 rounded-full bg-white flex items-center justify-center hover:bg-slate-100 transition-colors">
                                            <div class="w-14 h-14 rounded-full bg-white border-4 border-slate-800"></div>
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Camera Controls -->
                                <div class="flex justify-center space-x-4 mt-4">
                                    <button id="switch-camera" class="bg-slate-600 hover:bg-slate-500 text-white py-2 px-4 rounded-lg transition-colors">
                                        <i class="fas fa-camera-rotate"></i> Switch Camera
                                    </button>
                                    <button id="retake-photo" class="bg-slate-600 hover:bg-slate-500 text-white py-2 px-4 rounded-lg transition-colors hidden">
                                        <i class="fas fa-rotate-left"></i> Retake
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Captured Image Preview -->
                            <div id="captured-preview-container" class="hidden">
                                <div class="bg-slate-700 rounded-xl p-4">
                                    <div class="flex justify-between items-center mb-3">
                                        <h3 class="font-medium">Captured Photo</h3>
                                        <button type="button" id="discard-photo" class="text-red-400 hover:text-red-300">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                    <canvas id="captured-image" class="w-full h-auto rounded-lg max-h-64 object-contain"></canvas>
                                </div>
                                
                                <!-- Use This Photo Button -->
                                <button id="use-photo-button" 
                                    class="w-full bg-lime-500 text-slate-900 py-3 rounded-lg font-bold hover:bg-lime-400 transition-colors flex items-center justify-center space-x-2">
                                    <i class="fas fa-robot"></i>
                                    <span>Analyze with AI</span>
                                </button>
                            </div>
                        </div>

                        <!-- Simple Tips -->
                        <div class="mt-8 pt-6 border-t border-slate-700">
                            <h3 class="text-sm font-semibold text-slate-400 uppercase mb-3">Tips for better results</h3>
                            <ul class="text-sm text-slate-400 space-y-2">
                                <li class="flex items-center space-x-2">
                                    <i class="fas fa-sun text-yellow-400"></i>
                                    <span>Take photos in good lighting</span>
                                </li>
                                <li class="flex items-center space-x-2">
                                    <i class="fas fa-utensils text-green-400"></i>
                                    <span>Make sure all food is visible</span>
                                </li>
                                <li class="flex items-center space-x-2">
                                    <i class="fas fa-ruler text-blue-400"></i>
                                    <span>Include a reference for scale</span>
                                </li>
                                <li class="flex items-center space-x-2">
                                    <i class="fas fa-ban text-red-400"></i>
                                    <span>Avoid blurry or dark photos</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Mobile Menu -->
    <div id="mobile-menu" class="fixed inset-0 bg-slate-900 z-50 hidden md:hidden">
        <div class="p-6">
            <div class="flex justify-between items-center mb-8">
                <div class="flex items-center space-x-3">
                    <div
                        class="w-10 h-10 rounded-full bg-gradient-to-br from-lime-400 via-green-500 to-emerald-600 flex items-center justify-center">
                    </div>
                    <span class="text-2xl font-bold text-white">NutriScan.AI</span>
                </div>
                <button id="close-mobile-menu" class="text-white">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>

            <nav class="space-y-4">
                <a href="/dashboard" class="block p-3 rounded-lg text-slate-300 hover:text-white hover:bg-slate-800">
                    <i class="fas fa-home mr-3"></i>Dashboard
                </a>
                <a href="/meal-plans" class="block p-3 rounded-lg text-slate-300 hover:text-white hover:bg-slate-800">
                    <i class="fas fa-utensils mr-3"></i>Meal Plans
                </a>
                <a href="/ai-analysis"
                    class="block p-3 rounded-lg bg-lime-500/10 text-lime-400 border-l-4 border-lime-500">
                    <i class="fas fa-camera mr-3"></i>Scan Meal
                </a>
                <a href="/progress" class="block p-3 rounded-lg text-slate-300 hover:text-white hover:bg-slate-800">
                    <i class="fas fa-chart-line mr-3"></i>Progress
                </a>
            </nav>
        </div>
    </div>

    <script>
        // Mobile menu toggle
        document.getElementById('mobile-menu-button')?.addEventListener('click', function () {
            document.getElementById('mobile-menu').classList.remove('hidden');
        });

        document.getElementById('close-mobile-menu')?.addEventListener('click', function () {
            document.getElementById('mobile-menu').classList.add('hidden');
        });

        // Tab switching
        const uploadTab = document.getElementById('upload-tab');
        const cameraTab = document.getElementById('camera-tab');
        const uploadSection = document.getElementById('upload-section');
        const cameraSection = document.getElementById('camera-section');

        uploadTab.addEventListener('click', () => {
            uploadTab.classList.add('bg-lime-500', 'text-slate-900');
            uploadTab.classList.remove('text-slate-300', 'hover:text-white');
            cameraTab.classList.remove('bg-lime-500', 'text-slate-900');
            cameraTab.classList.add('text-slate-300', 'hover:text-white');
            uploadSection.classList.remove('hidden');
            cameraSection.classList.add('hidden');
            stopCamera(); // Stop camera when switching to upload tab
        });

        cameraTab.addEventListener('click', () => {
            cameraTab.classList.add('bg-lime-500', 'text-slate-900');
            cameraTab.classList.remove('text-slate-300', 'hover:text-white');
            uploadTab.classList.remove('bg-lime-500', 'text-slate-900');
            uploadTab.classList.add('text-slate-300', 'hover:text-white');
            cameraSection.classList.remove('hidden');
            uploadSection.classList.add('hidden');
            initializeCamera(); // Initialize camera when switching to camera tab
        });

        // File upload handling
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('file-input');
        const previewContainer = document.getElementById('preview-container');
        const previewImage = document.getElementById('preview-image');
        const previewLoading = document.getElementById('preview-loading');
        const removeImageBtn = document.getElementById('remove-image');
        const analyzeButton = document.getElementById('analyze-button');

        // Prevent default drag behaviors
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, preventDefaults, false);
            document.body.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        // Highlight drop area when item is dragged over it
        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, unhighlight, false);
        });

        function highlight() {
            dropArea.classList.add('dragover');
        }

        function unhighlight() {
            dropArea.classList.remove('dragover');
        }

        // Handle dropped files
        dropArea.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            handleFiles(files);
        }

        // Handle file input change
        fileInput.addEventListener('change', function() {
            handleFiles(this.files);
        });

        function handleFiles(files) {
            if (files.length > 0) {
                const file = files[0];
                if (file.type.startsWith('image/')) {
                    // Show loading state
                    previewLoading.classList.remove('hidden');
                    previewImage.classList.add('hidden');
                    previewContainer.classList.add('show');
                    
                    // Create a FileReader to read the file
                    const reader = new FileReader();
                    
                    reader.onload = function(e) {
                        // Set the image source to the file data
                        previewImage.src = e.target.result;
                        
                        // Hide loading and show image
                        setTimeout(() => {
                            previewLoading.classList.add('hidden');
                            previewImage.classList.remove('hidden');
                            analyzeButton.disabled = false;
                            analyzeButton.classList.remove('bg-slate-600', 'text-slate-400', 'cursor-not-allowed');
                            analyzeButton.classList.add('bg-lime-500', 'text-slate-900', 'hover:bg-lime-400', 'cursor-pointer');
                        }, 500);
                    };
                    
                    reader.readAsDataURL(file);
                } else {
                    alert('Please select an image file.');
                }
            }
        }

        // Remove image
        removeImageBtn.addEventListener('click', function() {
            previewContainer.classList.remove('show');
            fileInput.value = '';
            analyzeButton.disabled = true;
            analyzeButton.classList.add('bg-slate-600', 'text-slate-400', 'cursor-not-allowed');
            analyzeButton.classList.remove('bg-lime-500', 'text-slate-900', 'hover:bg-lime-400', 'cursor-pointer');
            
            // Reset after transition
            setTimeout(() => {
                previewImage.src = '';
            }, 500);
        });

        // Camera functionality
        const cameraFeed = document.getElementById('camera-feed');
        const captureButton = document.getElementById('capture-button');
        const switchCameraBtn = document.getElementById('switch-camera');
        const retakePhotoBtn = document.getElementById('retake-photo');
        const discardPhotoBtn = document.getElementById('discard-photo');
        const usePhotoButton = document.getElementById('use-photo-button');
        const cameraLoading = document.getElementById('camera-loading');
        const capturedPreviewContainer = document.getElementById('captured-preview-container');
        const capturedImage = document.getElementById('captured-image');

        let stream = null;
        let currentFacingMode = 'environment'; // Start with back camera

        async function initializeCamera() {
            try {
                cameraLoading.classList.remove('hidden');
                
                // Stop any existing stream
                if (stream) {
                    stream.getTracks().forEach(track => track.stop());
                }
                
                // Get camera stream
                stream = await navigator.mediaDevices.getUserMedia({
                    video: { 
                        facingMode: currentFacingMode,
                        width: { ideal: 1280 },
                        height: { ideal: 720 }
                    },
                    audio: false
                });
                
                cameraFeed.srcObject = stream;
                cameraLoading.classList.add('hidden');
                capturedPreviewContainer.classList.add('hidden');
                retakePhotoBtn.classList.add('hidden');
                
            } catch (err) {
                console.error('Error accessing camera:', err);
                cameraLoading.classList.add('hidden');
                alert('Unable to access camera. Please check permissions and try again.');
            }
        }

        function stopCamera() {
            if (stream) {
                stream.getTracks().forEach(track => track.stop());
                stream = null;
            }
        }

        // Switch between front and back camera
        switchCameraBtn.addEventListener('click', function() {
            currentFacingMode = currentFacingMode === 'environment' ? 'user' : 'environment';
            initializeCamera();
        });

        // Capture photo
        captureButton.addEventListener('click', function() {
            const canvas = document.createElement('canvas');
            const context = canvas.getContext('2d');
            
            // Set canvas dimensions to match video
            canvas.width = cameraFeed.videoWidth;
            canvas.height = cameraFeed.videoHeight;
            
            // Draw current video frame to canvas
            context.drawImage(cameraFeed, 0, 0, canvas.width, canvas.height);
            
            // Display the captured image
            capturedImage.width = canvas.width;
            capturedImage.height = canvas.height;
            const capturedContext = capturedImage.getContext('2d');
            capturedContext.drawImage(canvas, 0, 0);
            
            // Show the captured preview and hide the camera feed
            capturedPreviewContainer.classList.remove('hidden');
            cameraFeed.classList.add('hidden');
            retakePhotoBtn.classList.remove('hidden');
            captureButton.classList.add('hidden');
        });

        // Retake photo
        retakePhotoBtn.addEventListener('click', function() {
            capturedPreviewContainer.classList.add('hidden');
            cameraFeed.classList.remove('hidden');
            retakePhotoBtn.classList.add('hidden');
            captureButton.classList.remove('hidden');
        });

        // Discard photo
        discardPhotoBtn.addEventListener('click', function() {
            capturedPreviewContainer.classList.add('hidden');
            cameraFeed.classList.remove('hidden');
            retakePhotoBtn.classList.add('hidden');
            captureButton.classList.remove('hidden');
        });

        // Use photo for analysis
        usePhotoButton.addEventListener('click', function() {
            // In a real application, you would send the captured image to your server
            // For now, we'll simulate this by showing a success message
            alert('Photo submitted for analysis! In a real application, this would be sent to the server.');
            
            // Reset the camera view
            capturedPreviewContainer.classList.add('hidden');
            cameraFeed.classList.remove('hidden');
            retakePhotoBtn.classList.add('hidden');
            captureButton.classList.remove('hidden');
        });

        // Initialize camera when page loads if on camera tab
        // But for better UX, we'll initialize only when the camera tab is clicked
    </script>
</body>

</html>